apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 33
    buildToolsVersion "30.0.3"
//    ndkVersion "25.1.8937393"
    ndkVersion "25.2.9519653"
    defaultConfig {
        applicationId "org.sdrppbrown.sdrppbrown"
        minSdkVersion 28
        targetSdkVersion 33
        versionCode 1
        versionName "1.1.0"

        externalNativeBuild {
            cmake {
                arguments "-DCMAKE_BUILD_TYPE=Release", "-DSDR_KIT_ROOT=${sdrKitRoot}", "-DOPT_BACKEND_GLFW=OFF", "-DOPT_BACKEND_ANDROID=ON", "-DOPT_BUILD_SOAPY_SOURCE=OFF", "-DOPT_BUILD_ANDROID_AUDIO_SINK=ON", "-DOPT_BUILD_AUDIO_SINK=OFF", "-DOPT_BUILD_DISCORD_PRESENCE=OFF", "-DOPT_BUILD_M17_DECODER=ON", "-DOPT_BUILD_PLUTOSDR_SOURCE=ON", "-DOPT_BUILD_AUDIO_SOURCE=OFF", "-DOPT_BUILD_CH_EXTRAVHF_DECODER=ON"
            }
        }
        signingConfig signingConfigs.debug

        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
        }
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            keyAlias "androiddebugkey"
            storePassword 'android'
            keyPassword 'android'
        }
        release {
            storeFile file('/home/san/Fun/SDRPlusPlus/my-release-key.keystore')
            storePassword 'android'
            keyAlias 'alias_name'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
            signingConfig signingConfigs.release

//            postprocessing {
//                removeUnusedCode = true
//                removeUnusedResources = true
//                include "**/*.so"
//            }

        }
        debug {
            signingConfig signingConfigs.debug
        }
    }

    externalNativeBuild {
        cmake {
            version "3.22.1"
            path "../../CMakeLists.txt"
        }
    }

    sourceSets {
        main {
            assets.srcDirs += ['assets']
            jniLibs.srcDirs += ['bin']
        }
    }
}

task deleteTempAssets (type: Delete) {
    delete 'assets'
}

task copyResources(type: Copy) {
    description = 'Copy resources...'
    from '../../root/'
    into 'assets/'
    include('**/*')
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
}

copyResources.dependsOn deleteTempAssets
preBuild.dependsOn copyResources